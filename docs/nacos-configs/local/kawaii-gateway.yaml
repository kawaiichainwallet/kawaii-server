spring:
  data:
    # Redis配置 - 用于限流
    redis:
      host: localhost
      port: 6379
      database: 0
      password:
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  # Gateway通用配置
  cloud:
    gateway:
      server:
        webflux:
          routes:
            # 用户服务公开路由 - 无需认证的接口
            - id: kawaii-user-public
              uri: lb://kawaii-user
              predicates:
                - Path=/api/v1/user/auth/**,/api/v1/user/check-**
              filters:
                - RewritePath=/api/v1/(?<service>\w+)/(?<segment>.*), /$\{service}/$\{segment}
                - name: RequestRateLimiter
                  args:
                    key-resolver: "#{@ipKeyResolver}"
                    redis-rate-limiter:
                      replenish-rate: 20
                      burst-capacity: 40
                      requested-tokens: 1
              order: 0

            # 用户服务受保护路由 - 需要认证的接口
            - id: kawaii-user-protected
              uri: lb://kawaii-user
              predicates:
                - Path=/api/v1/user/**
              filters:
                - name: Authentication
                - RewritePath=/api/v1/(?<service>\w+)/(?<segment>.*), /$\{service}/$\{segment}
                - name: RequestRateLimiter
                  args:
                    key-resolver: "#{@ipKeyResolver}"
                    redis-rate-limiter:
                      replenish-rate: 10
                      burst-capacity: 20
                      requested-tokens: 1
              order: 1

            # 核心服务公开路由 - 无需认证的接口
            - id: kawaii-core-public
              uri: lb://kawaii-core
              predicates:
                - Path=/api/v1/core/health
              filters:
                - RewritePath=/api/v1/(?<service>\w+)/(?<segment>.*), /$\{service}/$\{segment}
              order: 2

            # 核心服务受保护路由 - 需要认证的接口
            - id: kawaii-core-protected
              uri: lb://kawaii-core
              predicates:
                - Path=/api/v1/core/**
              filters:
                - name: Authentication
                - RewritePath=/api/v1/(?<service>\w+)/(?<segment>.*), /$\{service}/$\{segment}
              order: 3

            # 支付服务公开路由 - 无需认证的接口
            - id: kawaii-payment-public
              uri: lb://kawaii-payment
              predicates:
                - Path=/api/v1/payment/webhook/**
              filters:
                - RewritePath=/api/v1/(?<service>\w+)/(?<segment>.*), /$\{service}/$\{segment}
              order: 4

            # 支付服务受保护路由 - 需要认证的接口
            - id: kawaii-payment-protected
              uri: lb://kawaii-payment
              predicates:
                - Path=/api/v1/payment/**
              filters:
                - name: Authentication
                - RewritePath=/api/v1/(?<service>\w+)/(?<segment>.*), /$\{service}/$\{segment}
              order: 5
          # 全局CORS配置
          globalcors:
            cors-configurations:
              '[/**]':
                allowedOriginPatterns: "*"
                allowedMethods:
                  - GET
                  - POST
                  - PUT
                  - DELETE
                  - OPTIONS
                allowedHeaders: "*"
                allowCredentials: true

      # 全局过滤器配置
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin

# 应用配置
app:
  # 路由安全配置
  security:
    routes:
      # 内部路径 - 仅服务间调用，阻止外部直接访问
      internal-paths:
        - "/api/v1/*/internal/**"